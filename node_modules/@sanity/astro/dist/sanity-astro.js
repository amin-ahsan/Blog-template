(function(i,o){typeof exports=="object"&&typeof module<"u"?o(exports):typeof define=="function"&&define.amd?define(["exports"],o):(i=typeof globalThis<"u"?globalThis:i||self,o(i.sanityAstro={}))})(this,function(i){"use strict";function o(n){const t="virtual:sanity-init",e="\0"+t;return{name:"vite-plugin-sanity-init",resolveId(s){if(s===t)return e},load(s){if(s===e)return`
          import { createClient } from "@sanity/client";
          export const sanityClientInstance = createClient(
            ${JSON.stringify(n)}
          );
        `}}}function u(n,t){const e="virtual:sanity-studio",s=e;return{name:"vite-plugin-sanity-studio",resolveId(a){return a===e?s:null},async load(a){if(a==="virtual:sanity-studio"){if(t.output!=="hybrid"&&t.output!=="server")throw new Error("[@sanity/astro]: Sanity Studio requires `output: 'hybrid'` or `output: 'server'` in your Astro config");const r=await this.resolve("/sanity.config");if(!r)throw new Error("[@sanity/astro]: Sanity Studio requires a `sanity.config.ts|js` file in your project root.");if(!n.studioBasePath)throw new Error("[@sanity/astro]: The `studioBasePath` option is required in `astro.config.mjs`. For example â€” `studioBasePath: '/admin'`");return`
        import config from "${r.id}";
        if (config.basePath) {
          if (config.basePath !== "/${n.studioBasePath}") {
            console.warn(
              "[@sanity/astro]: This integration ignores the basePath setting in sanity.config.ts|js. To set the basePath for Sanity Studio, use the studioBasePath option in astro.config.mjs and remove it from sanity.config.ts.");
          }
        }

        export default {
          ...config,
          // override basePath from sanity.config.ts|js with plugin setting
          basePath: "/${n.studioBasePath}",
        }`}return null}}}function l(){return globalThis.sanityClientInstance||console.error("[@sanity/astro]: sanityClientInstance has not been initialized correctly"),globalThis.sanityClientInstance}const d={apiVersion:"v2023-08-24"};function f(n){const t={...d,...n};return{name:"@sanity/astro",hooks:{"astro:config:setup":({injectScript:e,injectRoute:s,updateConfig:a,config:r})=>{a({vite:{plugins:[o(t),u(t,r)]}}),t.studioBasePath&&s({entryPoint:"@sanity/astro/studio/studio-route.astro",pattern:`/${t.studioBasePath}/[...params]`,prerender:!1}),e("page-ssr",`
          import { sanityClientInstance } from "virtual:sanity-init";
          globalThis.sanityClientInstance = sanityClientInstance;
          `)}}}}i.default=f,i.useSanityClient=l,Object.defineProperties(i,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
